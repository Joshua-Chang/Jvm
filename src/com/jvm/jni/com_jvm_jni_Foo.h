/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class com_jvm_jni_Foo */

#ifndef _Included_com_jvm_jni_Foo
#define _Included_com_jvm_jni_Foo
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     com_jvm_jni_Foo
 * Method:    foo
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_com_jvm_jni_Foo_foo
  (JNIEnv *, jclass);//静态native方法传入jclass，即定义该static native方法的类Foo

/*
 * Class:     com_jvm_jni_Foo
 * Method:    bar
 * Signature: (IJ)V
 */
JNIEXPORT void JNICALL Java_com_jvm_jni_Foo_bar__IJ
  (JNIEnv *, jobject, jint, jlong);//实例native方法传入jobject，代指该方法的调用者，即Foo的实例

/*
 * Class:     com_jvm_jni_Foo
 * Method:    bar
 * Signature: (Ljava/lang/String;Ljava/lang/Object;)V
 */
JNIEXPORT void JNICALL Java_com_jvm_jni_Foo_bar__Ljava_lang_String_2Ljava_lang_Object_2
  (JNIEnv *, jobject, jstring, jobject);

#ifdef __cplusplus
}
#endif
#endif
